{"version":3,"file":"static/js/247.aba35c62.chunk.js","mappings":"uMA4CA,UAvCc,WACV,OAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,WACX,KACGC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GACNN,EAAYM,EAASC,KAAKC,MAAM,EAAE,IACnC,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACJ,GAAE,CAACR,KAGI,8BACDF,EAASa,OAAS,GAEhB,wBACYb,EAASc,KAAI,YAAmD,IAAjDC,EAAgD,EAAhDA,GAAIC,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,UACjD,OAAQ,2BACJ,gBAAKC,IAAMH,EAAD,0CAEuBA,GAD/BI,EAC+CC,IAAKJ,EAAeK,MAAO,OAC/E,6BAAKL,EAAL,QACC,wCAAgBC,EAAhB,SALeH,EAOhB,OAEA,6EAOpB,C","sources":["components/Cast/Cast.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { FilmCreditsByID } from \"services/FetchMovies\";\nimport memImage from './troll-advice_43866985_orig_.jpg'\n\n const Cast = () => {\n    const [castInfo, setcastInfo] = useState([])\n    const { movieId } = useParams()\n    \n    useEffect(() => {\n   try {\n      FilmCreditsByID(movieId)\n        .then(response => {\n        setcastInfo(response.cast.slice(0,12));\n      });\n    } catch (error) {\n      console.log(error);\n    }\n}, [movieId])\n\n    return (\n        <>\n      {castInfo.length > 0\n               ? (\n         <ul>\n                    {castInfo.map(({id, profile_path, original_name, character}) => {\n                    return  <li key={id}>\n                        <img src={!profile_path\n                        ? memImage\n                    : `https://image.tmdb.org/t/p/w500/${profile_path}`} alt={original_name} width={100} />\n                     <p> {original_name} </p>\n                      <p>Character:  {character} </p>  \n                        </li>   \n                    })}\n                </ul>  \n                ) : (<p>\n                    There is no information about cast of this movie\n                </p>)\n                 \n        }\n    </>\n    )\n}\n\nexport default Cast"],"names":["useState","castInfo","setcastInfo","movieId","useParams","useEffect","FilmCreditsByID","then","response","cast","slice","error","console","log","length","map","id","profile_path","original_name","character","src","memImage","alt","width"],"sourceRoot":""}