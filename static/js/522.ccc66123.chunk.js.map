{"version":3,"file":"static/js/522.ccc66123.chunk.js","mappings":"qPAEaA,EAAgBC,EAAAA,EAAAA,KAAH,8KASXC,EAAkBD,EAAAA,EAAAA,OAAH,gUA4BjBE,GAXuBF,EAAAA,EAAAA,KAAH,2NAWHA,EAAAA,EAAAA,MAAH,2N,SCjCdG,EAAa,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,SAC3B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAkBO,OACN,UAACR,EAAD,CAAeK,SAbM,SAAAI,GACnBA,EAAMC,iBAEoB,KAAtBH,EAAWI,QAKfN,EAASE,GACTC,EAAc,KALZI,EAAAA,GAAAA,QAAc,kCAMjB,EAGD,WAGE,SAACT,EAAD,CACQU,SArBgB,SAAAJ,GACxBD,EAAeC,EAAMK,cAAcC,MAAMC,cAC1C,EAoBOD,MAAOR,EACPU,KAAK,aACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAGT,SAACnB,EAAD,CAAiBgB,KAAK,SAAtB,sBAKZ,E,4CCKD,EA1Ce,WAAO,IAAD,EACjB,GAAwCZ,EAAAA,EAAAA,UAAS,IAAjD,eAAOgB,EAAP,KAAqBC,EAArB,KACA,GAAoCC,EAAAA,EAAAA,MAApC,eAAOC,EAAP,KAAmBC,EAAnB,KACMT,EAAI,UAAGQ,EAAWE,IAAI,eAAlB,QAA6B,GACjCC,GAAWC,EAAAA,EAAAA,MAkBjB,OAZAC,EAAAA,EAAAA,YAAU,WACV,GAAIb,EACF,KACEc,EAAAA,EAAAA,IAAWd,GAAMe,MAAK,SAAAC,GACpBV,GAAgB,OAAIU,EAASC,SAC9B,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CAEJ,GAAE,CAAClB,KAEM,iCACJ,SAACb,EAAD,CAAYC,SAjBS,SAAAE,GACzBmB,EAA6B,KAAfnB,EAAoB,CAAEU,KAAMV,GAAe,CAAC,EAC3D,IAgB8B,IAAxBe,EAAagB,QAAyB,KAATrB,IAAgB,6CACzBA,EADyB,qBAG9C,SAAC,KAAD,UACCK,EAAaiB,KAAI,YAAuC,IAArCC,EAAoC,EAApCA,GAAIC,EAAgC,EAAhCA,eAAeC,EAAiB,EAAjBA,YAAkB,OAAO,SAAC,KAAD,WACpD,UAAC,KAAD,CAAOC,GAAE,UAAKH,GAAMI,MAAO,CAAEC,KAAMjB,GAAnC,WACJ,gBAAKkB,IAAMJ,EAAD,0CAE+BA,GAD/BK,EAC8CC,IAAKP,EAAgBQ,MAAO,OAC/E,UAAC,KAAD,eAAcR,EAAd,WAL0ED,EAOnE,QAK3B,C","sources":["components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movie/Movie.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const SearchBarForm = styled.form`\n    display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;`\n\n  export const SearchBarButton = styled.button`\n     display: inline-block;\n\nheight: 32px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n  opacity: 1;\n}\n  `\n\nexport const SearchBarButtonLabel = styled.span`\n  position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;`\n\nexport const SearchBarInput = styled.input`\n     display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  padding-left: 4px;\n  padding-right: 4px;\n  \n  ::placeholder {\n  font: inherit;\n  font-size: 18px;\n}\n  ` ","import { useState } from \"react\";\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { SearchBarButton,SearchBarForm,SearchBarInput } from \"./SearchForm.styled\";\n\n\nexport const SearchForm = ({onSubmit}) =>  {\n const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = event => {\n    setInputValue( event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (inputValue.trim() === '') {\n      toast.warning('Type some movie name for search');\n      return;\n    }\n\n    onSubmit(inputValue);\n    setInputValue('');\n  };\n  \n        return (\n  <SearchBarForm onSubmit={handleSubmit}>\n   \n\n    <SearchBarInput\n            onChange={handleInputChange}\n          value={inputValue}\n          name=\"inputValue\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n            />\n            \n             <SearchBarButton type=\"submit\" >\n        Search\n    </SearchBarButton>\n  </SearchBarForm>\n        )\n}\n    \nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import { SearchForm } from \"components/SearchForm/SearchForm\"\nimport { useState, useEffect } from \"react\" \nimport { useLocation, useSearchParams, Link } from \"react-router-dom\"\nimport { FilmByName } from \"services/FetchMovies\"\nimport memImage from '../../components/Cast/troll-advice_43866985_orig_.jpg'\nimport { MovieList,MovieTitle,MovieGalleryItem } from \"../Home/Home.styled\"\n\n const Movie = () => {\n    const [searchMovies, setSearchMovies] = useState([])\n    const [searchName, setSearchName] = useSearchParams();\n    const name = searchName.get(\"name\") ?? '';\n    const location = useLocation()\n\n    const handleFormSubmit = inputValue => {\n    setSearchName(inputValue !== '' ? { name: inputValue } : {});\n  };\n\n    useEffect(() => {\n    if (name) {\n      try {\n        FilmByName(name).then(response => {\n          setSearchMovies([...response.results]);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [name]);\n    \n    return (<>\n        <SearchForm onSubmit={handleFormSubmit} />\n        {searchMovies.length === 0 && name !== '' && (<h1>\n            Films with name {name} was not found\n        </h1>)}\n        <MovieList>\n        {searchMovies.map(({id, original_title,poster_path}) => {return <MovieGalleryItem key={id}>\n                    <Link  to={`${id}`} state={{ from: location }}>\n                <img src={!poster_path\n                        ? memImage\n                    : `https://image.tmdb.org/t/p/w500/${poster_path}`} alt={original_title} width={300} />\n                     <MovieTitle> {original_title} </MovieTitle>\n            </Link>\n        </MovieGalleryItem>})}\n        </MovieList>\n\n    \n    </>)\n}\n\nexport default Movie"],"names":["SearchBarForm","styled","SearchBarButton","SearchBarInput","SearchForm","onSubmit","useState","inputValue","setInputValue","event","preventDefault","trim","toast","onChange","currentTarget","value","toLowerCase","name","type","autoComplete","autoFocus","placeholder","searchMovies","setSearchMovies","useSearchParams","searchName","setSearchName","get","location","useLocation","useEffect","FilmByName","then","response","results","error","console","log","length","map","id","original_title","poster_path","to","state","from","src","memImage","alt","width"],"sourceRoot":""}