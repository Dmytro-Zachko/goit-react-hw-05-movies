{"version":3,"file":"static/js/186.00cae3f5.chunk.js","mappings":"oOAIaA,EAAU,WACnB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,WACN,KACIC,EAAAA,EAAAA,IAAgBH,GACnBI,MAAK,SAAAC,GAAQ,OAAIN,EAAeM,EAASC,QAA5B,GAGb,CAFC,MAAOC,GACRC,QAAQC,IAAIF,EACZ,CACJ,GAAE,CAACP,KAGL,8BACWF,EAAYY,QAGjB,wBACYZ,EAAYa,KAAI,YAA4B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QAC/B,OAAQ,2BACJ,oCAAYD,EAAZ,QACA,6BAAKC,EAAL,SAFaF,EAIhB,OARJ,oEAchB,EAED,W","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { FilmReviewsByID } from \"services/FetchMovies\";\n\nexport const Reviews = () => {\n    const [reviewsInfo, setreviewsInfo] = useState([])\n    const { movieId } = useParams()\n    \n    useEffect(() => {\n        try {\n            FilmReviewsByID(movieId)\n        .then(responce => setreviewsInfo(responce.results))\n        } catch (error) {\n         console.log(error)   \n        }\n    }, [movieId])\n    \n    return (\n   <>\n            {!reviewsInfo.length ?\n                (<p>We dont have any reviews for this movie</p>)\n                : (\n         <ul>\n                    {reviewsInfo.map(({id, author, content}) => {\n                    return  <li key={id}>\n                        <p>Author: {author} </p>  \n                        <p> {content} </p>\n                        </li>   \n                    })}\n                </ul>  \n                )\n                }        \n    </>\n         )\n}\n\nexport default Reviews"],"names":["Reviews","useState","reviewsInfo","setreviewsInfo","movieId","useParams","useEffect","FilmReviewsByID","then","responce","results","error","console","log","length","map","id","author","content"],"sourceRoot":""}